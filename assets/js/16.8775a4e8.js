(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{291:function(t,r,a){"use strict";a.r(r);var n=a(4),e=Object(n.a)({},(function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"使用鼠标可以提升编程效率吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用鼠标可以提升编程效率吗"}},[t._v("#")]),t._v(" 使用鼠标可以提升编程效率吗？")]),t._v(" "),a("h2",{attrs:{id:"引言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[t._v("#")]),t._v(" 引言")]),t._v(" "),a("p",[t._v('当听到 "纯键盘操作" 的时候，恐怕不少人会嗤之于鼻，甚至会觉得奉行这一理念的人是古怪\n的 Vim/Emacs nerd，以用键盘敲出来 '),a("code",[t._v("g/re/p")]),t._v("  这种又长又臭的咒语为荣。")]),t._v(" "),a("p",[t._v("这是完全的偏见。我可以说 Emacs 里有各种 IDE 都难以媲美的鼠标编程操作体验－－在 Emacs\n 的『任何操作都是可执行的函数』的设计理念下，你可以为鼠标绑定任何你可以在键盘上执\n行的操作。在这么强大的鼠标支持下，大部份的 Emacs 用户却不约而同地选择了全键盘导向\n操作，其中必然有道理。")]),t._v(" "),a("p",[t._v("本文试图通过分析读者解答全键盘导向的操作在编程工作中的优点和鼠标的劣势。值得注意的是，\n我的论点更多基于自己的编程经验进行的分析，而非列举大量统计数据；事实上，这种数据\n往往充满个人差异而难以提供参考价值。如果你感觉我是在胡说八道，请记住，your\nmilage may very very vary 😛.")]),t._v(" "),a("h2",{attrs:{id:"编程时我们究竟在做什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编程时我们究竟在做什么"}},[t._v("#")]),t._v(" 编程时我们究竟在做什么？")]),t._v(" "),a("p",[t._v("部分赞同鼠标编辑可以提高效率的人可能持有这种论点：『编辑器的鼠标操作可以设计得像\n Photoshop，Zbrush 的计算机图形软件那样灵活高效。』借这个论点，我们首先来思考一下\n一个人编程时需要的是什么。")]),t._v(" "),a("p",[t._v("不得不说在很久很久以前，我也是个"),a("ruby",[t._v("电子视觉艺术"),a("rt",[t._v("VFX")])]),t._v("爱好者，直\n到我成为了一名 Lisp "),a("ruby",[t._v("用户"),a("rt",[t._v("Believer")])]),t._v("。在我的心目中 VFX 和编程都是\n一种美丽的艺术，然而这两种艺术的创作过程却大相径庭，不能把视觉艺术创造的经验生搬\n硬套到编程中。")]),t._v(" "),a("p",[t._v("视觉艺术类的创作，灵感往往是天启式出现的。你可能长达好几天脑海中没有任何可能的创\n作线索，可能在暴雨中的半夜惊醒，在闪烁的灵光指引下创作出令人惊叹的艺术品。因此，\n艺术家们需要各种不同效果立杆见影的反馈，从这些反馈碰撞出来的火花中寻找灵感。")]),t._v(" "),a("p",[t._v("然而，编程的灵感，往往来自于对程序的反复琢磨与挣扎中。比起 VFX 创作，编程更类似于\n写文章，每字每句都需要反复精炼和推敲，才能写出来最好的文章。我喜欢这样比喻，编程\n就像一个就要渴死的人面对着一个严重生锈的水龙头，拼命敲打才勉强能出来一点水......")]),t._v(" "),a("p",[t._v("受限制于大多数编程语言的基础设施，像艺术家一样的探索式编程体验是很难有的"),a("sup",{staticClass:"footnote-ref"},[a("a",{attrs:{href:"#fn1",id:"fnref1"}},[t._v("[1]")])]),t._v("，令\n一方面，编程中往往需要处理与现实世界的交互－－读取数据库，创立网络请求等。这些要\n打破沙箱的副作用无疑增加了交互式编程的难度"),a("sup",{staticClass:"footnote-ref"},[a("a",{attrs:{href:"#fn2",id:"fnref2"}},[t._v("[2]")])]),t._v("。更多的时候，编程人员是把程序的模\n型放在人脑中模拟运行，用大脑做『人肉静态分析』。这种脑内程序模型的建构和维持需要\n耗费大量心智和脑力，但是其本身十分脆弱，受到轻微的打扰就有可能被破坏。")]),t._v(" "),a("p",[t._v("我们常开玩笑道：『打字慢的程序员不是好程序员。』我觉得正确的表述应该是『打字不流\n畅的程序员不是好程序员。』因为打字不流畅意味着你的思考回路不通顺，思考间缺乏逻辑\n关联。脑子混沌一片的程序员又怎么能写出正确无误的程序呢？")]),t._v(" "),a("p",[t._v("在编程作业中，最好的操作应当是『没有操作』。能自动的决不手动，要手动的除了基本的\n打字以外，其他任何操作都应该尽可能无意识化，交给手指的肌肉记忆来处理。别忘了任何\n操作都是为了更好地写出来程序而服务的，如果你连程序都写不出来，醉心于各种操作，那\n不是舍本逐末吗？")]),t._v(" "),a("h2",{attrs:{id:"鼠标不适合承担复杂的功能"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#鼠标不适合承担复杂的功能"}},[t._v("#")]),t._v(" 鼠标不适合承担复杂的功能")]),t._v(" "),a("p",[t._v("在确立了『尽可能减轻编程时操作的思维负担』这一宗旨后。我们不得不面对一个严竣的真\n相：几乎所有程序的编写，都是用键盘录入字符串，再由编译器 / 解释器『翻译』给计算机，\n变成可以执行的程序…… 单凭这一点，就几乎可以判鼠标死刑。想想你打字打到一半，突然想\n看看某个函数的定义，于是你双手离开键盘，拿起鼠标。找到那个函数…… 等等，我想找哪一\n个函数来着？")]),t._v(" "),a("p",[t._v("为了使下面的讨论成立，我们暂且忽视手在键盘和鼠标间反复移动产生的思维『开销』，而\n且假设使用鼠标是为了执行打字以外的上层编辑命令（如快速注释，查找定义等）。")]),t._v(" "),a("p",[t._v("先来分析下鼠标的构成对于市面上最常见的三键鼠标，一般由左右两键，中间一个滚轮，下\n方一个发射激光定位的激光发生器。因此可以组合成下列几种操作：")]),t._v(" "),a("ul",[a("li",[t._v("移动")]),t._v(" "),a("li",[t._v("三键点击")]),t._v(" "),a("li",[t._v("拖拽")]),t._v(" "),a("li",[t._v("滚动滚轮")])]),t._v(" "),a("p",[t._v("除去基本的移动鼠标定位，我们能做的就只剩下点击鼠标按键。然而鼠标上的按键是有限的，\n想想在你每天的编程任务里，经常用到的高级指令有哪些呢？恐怕远远超过三个。")]),t._v(" "),a("p",[t._v("上一节里我提到过，最好的操作是『没有操作』。除了常年累月训练的肌肉记忆，另一个可\n以依赖的是我们的直觉。爱因斯坦说：")]),t._v(" "),a("blockquote",[a("p",[t._v("事情应当力求简单，但不能过于简单。")])]),t._v(" "),a("p",[t._v("把复杂的文本操作放在简单的鼠标点击上，其实是很违悖直觉的做法。在一般人的直觉里，\n"),a("kbd",[t._v("Ctrl-c")]),t._v("的 "),a("strong",[t._v("C")]),t._v(" 代表 Copy，Emacs 的 "),a("kbd",[t._v("Ctrl-f")]),t._v(" 的 "),a("strong",[t._v("f")]),t._v(" 意味着 forward，\n鼠标左键代表『确定』或者访问，鼠标右键代表打开菜单，鼠标中键，呃它很少用…… 如果把\n鼠标绑定到类似『重构』的操作，则需要刻意在认知中重新对鼠标按键和『重构』产生关联，\n这不仅过于复杂，而且容易出错。")]),t._v(" "),a("p",[t._v("可能是受一些触摸屏操作的启发，有人提出使用鼠标手势来扩展鼠标的功能。鼠标手势通常\n意味着用按住鼠标拖拽出特定的图形，然后按不同的图形触发出不同的功能。")]),t._v(" "),a("p",[t._v("为了绘制手势，往往需要大幅度地挥动手臂，否则极易产生混淆。比起使用键盘快捷键的手\n指微动，显然是过分浪费体力了。如果在频繁使用的功能上使用鼠标手势，很容易造成手臂\n的疲劳。上文已经提到过集中精神对编程的重要性，绘制鼠标手势反而需要分心。")]),t._v(" "),a("h2",{attrs:{id:"你不要鼠标就可以变得高效"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#你不要鼠标就可以变得高效"}},[t._v("#")]),t._v(" 你不要鼠标就可以变得高效")]),t._v(" "),a("p",[t._v("鼠标的设计目标是给予用户输入连续的 2D 数据和快速定位的能力。恰恰相反的是，编辑程序\n时需要的操作往往是离散的。我们不会在意光标到底移动到了哪一个像素点，而是在意他移\n动到了哪两个字符之间；甚至，字符的概念也可以被抽象掉，只关心光标选中了哪一段文本\n对象。换言之，在『雕刻』代码的时候，鼠标这种精细的输入设备并没有什么帮助。")]),t._v(" "),a("p",[t._v("一个常见的鼠标使用场景是通过一个 GUI 的界面执行高级编辑指令，然而这种情况下你也不\n一定需要用鼠标。对于常用的命令，你可以将其绑定到快捷键上，另外一个更通用的方法是\n通过 fuzzy finder（如 Emacs 的"),a("kbd",[t._v("Alt-x")]),t._v("，其他编辑器的"),a("kbd",[t._v("Ctrl-p")]),t._v("等）执\n行。")]),t._v(" "),a("p",[t._v("此外，鼠标的精确 2D 数据记录在这种场景有时会带来弊端。假设你将光标移动到按\n扭的边缘部分，这时候点击鼠标可能无法触发按钮。但鼠标的回弹依旧会给手指一个反馈，\n让你产生操作成功执行的错觉。")]),t._v(" "),a("p",[t._v("比起原始的光标移动定位，对快速代码定位更有帮助的是类似\n"),a("a",{attrs:{href:"https://github.com/brookhong/Surfingkeys",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Surfingkeys"),a("OutboundLink")],1),t._v("， 或者\n"),a("a",{attrs:{href:"https://vimium.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v(" vimium"),a("OutboundLink")],1),t._v(" 这样的树状跳转。通过编辑器抓去代码里的关键信\n息并添加字符 tag，用键盘输入 tag 迅速定位到某一块需要操作的代码上"),a("sup",{staticClass:"footnote-ref"},[a("a",{attrs:{href:"#fn3",id:"fnref3"}},[t._v("[3]")])]),t._v("。")]),t._v(" "),a("p",[t._v("对于更复杂的跳转，往往是利用正则搜索等更加高效，鼠标难以起到什么作用。")]),t._v(" "),a("h2",{attrs:{id:"结论"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[t._v("#")]),t._v(" 结论")]),t._v(" "),a("p",[t._v("从现在开始，尽量少在你的编程作业中使用鼠标。")]),t._v(" "),a("p",[t._v("你可以考虑直接上手 Vim 或者 Emacs 这种全键盘导向的编辑器。当然，如果你对 IDE 或者\n VSCode/Atom 这种高颜值的『现代』编辑器难以割爱，那就尝试一下他们的 Vim 编辑插件"),a("sup",{staticClass:"footnote-ref"},[a("a",{attrs:{href:"#fn4",id:"fnref4"}},[t._v("[4]")])]),t._v("。\n当你习惯了这种纯键盘的操作逻辑后，你会发现少了鼠标并不会有强烈的不适感。如果遇到\n必须用鼠标的场景，那就尝试下用笔记本的触摸板吧！😉")]),t._v(" "),a("h2",{attrs:{id:"相关链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关链接"}},[t._v("#")]),t._v(" 相关链接")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"http://cat-v.mit.edu/2019-10-15-mouse-considered-harmful.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Mouse considered harmful for most daily\nusage."),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("一篇阐述了鼠标设计理念与日常使用计算机场景的冲突的文章")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/lotabout/skim",target:"_blank",rel:"noopener noreferrer"}},[t._v("Skim"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/davatorium/rofi",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rofi"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("个人推荐的部分 fuzzy searching and squeezing 工具，能大大提升使用键盘执行一些常\n见操作的效率，可在编辑文件以外的场合使用。")]),t._v(" "),a("p",[t._v("Skim 是命令行下的 ncurses 工具，rofi 则带有一个 GUI 界面。")]),t._v(" "),a("hr",{staticClass:"footnotes-sep"}),t._v(" "),a("section",{staticClass:"footnotes"},[a("ol",{staticClass:"footnotes-list"},[a("li",{staticClass:"footnote-item",attrs:{id:"fn1"}},[a("p",[t._v("Lisp 系方言可以提供这种快捷迅速的反馈体验 "),a("a",{staticClass:"footnote-backref",attrs:{href:"#fnref1"}},[t._v("↩︎")])])]),t._v(" "),a("li",{staticClass:"footnote-item",attrs:{id:"fn2"}},[a("p",[t._v("不过仍然有人在这方面做的努力，比如"),a("a",{attrs:{href:"https://darklang.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Darklang"),a("OutboundLink")],1),t._v(" "),a("a",{staticClass:"footnote-backref",attrs:{href:"#fnref2"}},[t._v("↩︎")])])]),t._v(" "),a("li",{staticClass:"footnote-item",attrs:{id:"fn3"}},[a("p",[t._v("可以参考这个"),a("a",{attrs:{href:"https://github.com/abo-abo/avy",target:"_blank",rel:"noopener noreferrer"}},[t._v(" Emacs 插件"),a("OutboundLink")],1),t._v(" 仓库内有 GIF 演示 "),a("a",{staticClass:"footnote-backref",attrs:{href:"#fnref3"}},[t._v("↩︎")])])]),t._v(" "),a("li",{staticClass:"footnote-item",attrs:{id:"fn4"}},[a("p",[t._v("不推荐 Emacs 以外的编辑器的 Emacskey 插件，因为和原有插件的快捷键冲突太严重。 "),a("a",{staticClass:"footnote-backref",attrs:{href:"#fnref4"}},[t._v("↩︎")])])])])])])}),[],!1,null,null,null);r.default=e.exports}}]);